#from https://game.ci/docs/github/getting-started/ 

name: Actions

on:
  push:
    tags:
      - '**'
    branches:
      - CI-Setup

# Define matrix strategy as a common variable
env:
  - unityVersion: 2022.3.20f1
  - targetPlatform:[ iOS, Android]
  - projectPath: .

jobs:
  test:
    name: Test for ${{ $targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        projectPath": ["."]
    outputs:
      versionNumber: ${{ steps.myTestStep.outputs.buildVersion }}

    steps:
      # Checkout
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}
          lfs: true
      
      # Cache
      - name: Setup cache
        uses: actions/cache@v4
        with:
          path: ${{ $projectPath }}/Library
          key: Library-${{ $projectPath }}-${{ $targetPlatform }}-${{ hashFiles($projectPath) }}
          restore-keys: |
            Library-${{ $projectPath }}-${{ $targetPlatform }}-
            Library-${{ $projectPath }}-
            Library-
      
      # Test
      - name: Run Tests
        uses: game-ci/unity-test-runner@v4
        id: testRunner
        env:
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: ${{ $projectPath }}
          unityVersion: ${{ $unityVersion }}
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          
      # Test results
      - name: Store test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: Test results for ${{ $targetPlatform }}
          path: ${{ steps.testRunner.outputs.artifactsPath }}

  build:
    name: Build for ${{ $targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform: ${{ variables.matrixStrategy.targetPlatform }}
        unityVersion: ${{ variables.matrixStrategy.unityVersion }}

    steps:
      # Checkout
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}
          lfs: true
      
      # Cache
      - name: Setup cache
        uses: actions/cache@v4
        with:
          path: ${{ $projectPath }}/Library
          key: Library-${{ $projectPath }}-${{ $targetPlatform }}-${{ hashFiles($projectPath) }}
          restore-keys: |
            Library-${{ $projectPath }}-${{ $targetPlatform }}-
            Library-${{ $projectPath }}-
            Library-
      
      # Build
      - name: Build
        uses: game-ci/unity-builder@v4
        id: myBuildStep
        env:
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: ${{ $projectPath }}
          unityVersion: ${{ $unityVersion }}
          targetPlatform: ${{ $targetPlatform }}
          versioning: Semantic
          allowDirtyBuild: true

      # Store artifacts
      - name: Store Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Build-${{ $targetPlatform }}
          path: build/${{ $targetPlatform }}/*.apk  # Or specify folder zipped option here.


  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs: buildAndTest
    
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
        
    - name: release
      uses: ncipollo/release-action@v1
      with:
        tag: ${{ needs.buildAndTest.outputs.versionNumber }}
        artifacts: "Build-*/*"
